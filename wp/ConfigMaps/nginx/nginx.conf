# Custom config
#daemon off;
user www-data;
pid /var/run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;
#load_module /usr/lib/nginx/modules/ngx_http_naxsi_module.so;

# you must set worker processes based on your CPU cores, nginx does not benefit from setting more than that
worker_processes 1;

# number of file descriptors used for nginx
# the limit for the maximum FDs on the server is usually set by the OS.
# if you don't set FD's then OS settings will be used which is by default 2000
worker_rlimit_nofile 100000;

# only log critical errors
error_log /var/log/nginx/nginx-error.log crit;

# provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # determines how much clients will be served per worker
    # max clients = worker_connections * worker_processes
    # max clients is also limited by the number of socket connections available on the system (~64k)
    worker_connections 1024;

    # optmized to serve many clients with each thread, essential for linux
    use epoll;

    # accept as many connections as possible, may flood worker connections if set too low
    multi_accept on;
}

http {
    rewrite_log on;

    # cache informations about FDs, frequently accessed files
    # can boost performance, but you need to test those values
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # to boost IO on HDD we can disable access logs
    #access_log off;

    # copies data between one FD and other from within the kernel
    # faster then read() + write()
    sendfile on;

    # send headers in one peace, its better then sending them one by one
    tcp_nopush on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;

    # server will close connection after this time
    keepalive_timeout 3;

    # number of requests client can make over keep-alive -- for testing
    #keepalive_requests 100000;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;

    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    client_max_body_size 32m;
    large_client_header_buffers 2 1k;

    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    limit_req_zone $binary_remote_addr zone=one:10m rate=7r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn addr 10;
    limit_conn_status 444;

    # reduce the data that needs to be sent over network
    gzip on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/x-component application/x-javascript application/javascript text/javascript text/x-js text/richtext image/svg+xml text/xsd text/xsl text/xml image/x-icon;
    gzip_disable "MSIE [1-6]\.";

    # no token
    server_tokens off;

    # size on server_name
    server_names_hash_bucket_size 2048;

    include /etc/nginx/mime.types;
    #include /etc/nginx/naxsi_core.rules;

    default_type text/html;

    # send file in UTF-8 by default
    charset UTF-8;

    # See: http://forum.nginx.org/read.php?2,152294,152401msg-152401
    #ssl_session_cache shared:SSL:10m;

    include /etc/nginx/01-default.conf;
}
